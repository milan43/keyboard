/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package keyboard;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.time;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.Timer;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.JTextComponent;
import static keyboard.UserInputFrame.url;

/**
 *
 * @author Meelon
 */
public strictfp class KeyBoardType extends javax.swing.JFrame {

    // Toolkit width = (Toolkit) Toolkit.getDefaultToolkit().getDesktopProperty(String.valueOf(getWidth()));
    // Toolkit height = (Toolkit) Toolkit.getDefaultToolkit().getDesktopProperty(String.valueOf(getHeight()));
    String displayeng = "";
    String displayed = "";
    // int temp = 0;
    int j = 0;
    int m = 0;
    String user;
    int entered = 0;
    ImageIcon icon;
    int timelen;
    int start = 0;
   // static Timer time;

    //Timer time;
    /**
     * Creates new form KeyBoardType
     *
     *
     */
    public KeyBoardType() {
//        this.setVisible(true);
        this.setSize(Toolkit.getDefaultToolkit().getScreenSize());

        initComponents();
    }

    public KeyBoardType(String name, ImageIcon icon, int timelen) {
        super();
        this.timelen = timelen;
        this.user = name;
        this.icon = icon;
        start = timelen;
        System.out.println("timelen  " + timelen);
        // System.out.println(user);
        initComponents();
        getName();

    }

    @Override
    public String getName() {
        info.setText("Here You Are!!!" + user);
        return user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modteify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jButton1 = new javax.swing.JButton();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        info = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        countdown = new javax.swing.JLabel();
        counterr = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu7 = new javax.swing.JMenu();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jMenu8 = new javax.swing.JMenu();
        nepali = new javax.swing.JMenuItem();
        english = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();

        jMenu2.setText("jMenu2");

        jMenu4.setText("jMenu4");

        jMenu5.setText("File");
        jMenuBar2.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar2.add(jMenu6);

        jButton1.setText("jButton1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Easy Typing");
        setBackground(new java.awt.Color(206, 255, 153));
        setBounds(new java.awt.Rectangle(200, 20, 0, 0));
        setForeground(java.awt.Color.lightGray);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(206, 255, 153));

        info.setBackground(new java.awt.Color(206, 255, 153));
        info.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        info.setText("User");
        info.setEnabled(false);

        display.setEditable(false);
        display.setBackground(new java.awt.Color(179, 255, 102));
        display.setColumns(20);
        display.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(display);

        input.setBackground(new java.awt.Color(206, 255, 153));
        input.setColumns(20);
        input.setLineWrap(true);
        input.setRows(5);
        input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(input);

        jPanel1.setBackground(new java.awt.Color(206, 255, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel1.setText("Error Count");

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel2.setText("Time ");

        countdown.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        countdown.setText("time");

        counterr.setEditable(false);
        counterr.setBackground(new java.awt.Color(206, 255, 153));
        counterr.setForeground(new java.awt.Color(0, 0, 204));
        counterr.setText("error");
        counterr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                counterrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(counterr, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(countdown, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(counterr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(countdown))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyboard/images/Untitled-1.jpg"))); // NOI18N
        jLabel5.setMaximumSize(new java.awt.Dimension(970, 370));
        jLabel5.setMinimumSize(new java.awt.Dimension(970, 370));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(364, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        jMenuBar1.setBackground(new java.awt.Color(206, 255, 153));
        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 255, 153), new java.awt.Color(153, 255, 153), new java.awt.Color(153, 153, 153), null));

        jMenu7.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 204)));
        jMenu7.setMnemonic('h');
        jMenu7.setText("Home");
        jMenu7.setFont(new java.awt.Font("Palatino Linotype", 0, 18)); // NOI18N

        jCheckBoxMenuItem2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Back");
        jCheckBoxMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxMenuItem2MouseClicked(evt);
            }
        });
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu7.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItem3.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("Exit");
        jCheckBoxMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem3ActionPerformed(evt);
            }
        });
        jMenu7.add(jCheckBoxMenuItem3);

        jMenuBar1.add(jMenu7);

        jMenu8.setMnemonic('l');
        jMenu8.setText("Language");
        jMenu8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        nepali.setBackground(new java.awt.Color(204, 255, 204));
        nepali.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        nepali.setForeground(new java.awt.Color(51, 51, 51));
        nepali.setText("Nepali");
        nepali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nepaliActionPerformed(evt);
            }
        });
        jMenu8.add(nepali);

        english.setFont(new java.awt.Font("Consolas", 2, 18)); // NOI18N
        english.setText("English");
        english.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                englishActionPerformed(evt);
            }
        });
        jMenu8.add(english);

        jMenuBar1.add(jMenu8);

        jMenu1.setText("User Input");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jCheckBoxMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("select");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Help");
        jMenu3.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* static String username = "root";
     static String password = "";
     static String url = "jdbc:mysql://localhost:3306/keyboard";*/
    String engdata[][] = {{"this is a simple paragraph that is meant to be nice and easy",
        "to type which is why there will be mommas no periods or any",
        "capital letters so i guess this means that it cannot really",
        "really be considered a paragraph but just a series of run",
        "on sentences this should help you get faster at typing as",
        "im trying not to use too many difficult words in it although",
        "i think that i might start making it hard by including some",
        "more difficult letters.I'm typing pretty quickly so forgive",
        "me for any mistakes i think that i will not just tell you a",
        "story about the time i went to the zoo and found a monkey",
        "and a fox playing together they were so cute and i think that",
        "were they were not supposed to be in the same cage but they",
        "somehow and i loved watching them horse around forgive the pun",
        "well i hope that it has been highly enjoyable typing this",
        "paragraph and i wish you the best of luck getting the best score",
        "that you possibly can.This is a small try of my to improve typing",
        "of you.Typing is one important(mostly needed) skill of all",
        "programmer.It is said that /*Time is Money*/ so effective typing",
        "skill isneeded to furnish our task as soon as possible"
    },
    {"Many people have lost the true meaning of love.Love is a very",
        "important part of one’s life,and if there uncertainty, it",
        "should not be pursued.The true meaning of love is to be in a",
        "complete and total bond with each other and care for each other",
        "when others flee. While many people try to achieve love in other",
        "ways, such as seeking financial support or having someone to",
        "support them in ways that they should do on their own, is not",
        "the true meaning of love.The ideas stated the last sentence",
        "wouldhelp relationships but would blur the overall meaning of",
        "love.Many people have looked for love in the wrong places. One",
        "must find a person to care for one in the darkest days to fully",
        "understand the true meaning of love. The true meaning of love",
        "is not easily achievable, and that is why some people will",
        "settle for less. True love will make one happy above all other",
        "aspects of life. The struggle,to find one’s perfect match is",
        "worth it in the end."},
    {"Information technology refers to the collection of tools and",
        "technologies that make it easy for individuals,businesses and",
        "other organizations to use,create,manage and exchange",
        "information.New developments in information technology",
        "havefundamentally transformed the way in which business",
        "is carried out The increasing power and falling costs of",
        "computers have made information storage, analysis and",
        "distribution faster,easier and less expensive than at any",
        "time before in human history.The Internet has removed",
        "geographical barriers, making it possible for companies to",
        "source material from one country , process it in another",
        "country, package it in yet another country and sell the final",
        "product globallyConsumers have information on products and",
        "services at their fingertips; they can compare different",
        "products, services or manufacturers to choose the best or",
        "the cheapest option. The Internet is now the most significant",
        "medium of entertainment, communication and commerce for many",
        "people. Consequently, electronic commerce is fast becoming an",
        "mportant component of the world economy. "

    }};

    String nepdata[] = {"s v u 3 ª r 5 h em ` 6 7 8 9 0f t y b w g k km a e d",
        "o / n j z if ; x If q 1 >  ! @ # $ % ^ & * ( ) -_ , . < M q w e",
        "r t y u i o p [ ] ` 1 2 3 4 5 6 7 8 9 0 - = a s d f g h j k l ; '",
        "z x c v b n m , .  / gfd sfd dfdf yfyf /f/f as nsf tfdf wfd wf/f",
        "ofqf nf}sf k'sf/ k/fu e/fu cfd xxxcv zd p; n\"n g'df efs; aocn",
        "neif dofgpli w;dutlc ljfsf klsdfFrg a\"4 lj>fd  aadffgghh kmf?s \n",
        "Hff]8L ldNg] ef], k~r] afhf 7f]Sg] ef], o;kfln t hGt]afv|{/f]",
        "vfg kfOg] ef]. bzscl3 s'g} Ps rnlrqsf nfuL ufOPsf] o; uLtdf",
        "lajfxdf VjfOg] ef]hsf] dxQjaf/] avfg ul/Psf] 5. pjf]nf lajfxsf",
        "cj;/df Oi6ldq, cfkmGtnufot ufpFe/sfnfO{ af]nfP/ dL7f] v'jfpg]",
        "rng lyof] . h;nfO{ hGt]afv|{/f],hGt]ef]h tyf et]/ elgGYof] . ",
        "df+;fxf/L k/Ljf/df v;L 9fNg}kg{] x'GYof] et]/df . (* jifL{of",
        "u0f]zs'df/L yfkf elG5g, -d]/f] lajfxdf kxf8sf u/f sfGnf 9fSg]",
        "u/L dfG5] cf]Ol/osf lyP, et]/ vfg._ \n pj]nfsf et]/df d;Lgfsf]",
        "eft,v;Lsf] df; 'dfq} x'GYof] .To;a]nf kxf8df df5f df;' vfg] cj;/",
        "bz}+ dfq} h'6\\Yof] , df;'eft vfgs} nflu eP klg dflg;x?",
        "6f9f6f9faf6 cfpFy] t/ df;'eGbf w]/} emf]n dfq} kYof{] /",
        "klg To;sf] :jfb sxfF xf] sxfF .\n"

    };
    Font f2 = new Font("ARIAL", Font.BOLD, 20);
    Font f1 = new Font("Arial", Font.TYPE1_FONT, 30);
    Font f3 = new Font("Arial", Font.HANGING_BASELINE, 35);
    Font f = new Font("PREETI", Font.PLAIN, 35);
    static int count = 0;

    DefaultHighlighter.DefaultHighlightPainter highlightPainter
            = new DefaultHighlighter.DefaultHighlightPainter(Color.YELLOW);

    int h = -1;
    int temp = 0;
    private void englishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_englishActionPerformed
        //h = h + 1;
        //displayeng = "";
        //time.stop();
        time.restart();
        start = timelen;
        temp = 0;
        j = 0;
        System.out.println("temp=" + temp);
        int i = (int) (Math.random() * 2 + 0);

        info.setText("Here You Are!!!" + getName());
        //System.out.println("Hello");
        display.setText("");
        display.setFont(f1);
        input.setFont(f1);

        displayeng = engdata[i][j].trim();
        display.setText(displayeng);
        input.setText("");
        counterr.setFont(f2);
        input.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                int c = e.getKeyCode();
                System.out.println(e.getKeyChar());
                if (temp < displayeng.length()) {
                    // String inputted = input.getText();

                    if (c != KeyEvent.VK_BACK_SPACE
                            && c != KeyEvent.VK_ALL_CANDIDATES
                            && c != KeyEvent.VK_ALT
                            && c != KeyEvent.VK_CAPS_LOCK
                            && c != KeyEvent.VK_WINDOWS
                            && c != KeyEvent.VK_SHIFT
                            && c != KeyEvent.VK_CONTROL
                            && c != KeyEvent.VK_ENTER) {

                        //  if(e.getKeyChar()==KeyEvent.VK_ALPHANUMERIC){
//
//                        System.out.println(KeyEvent.VK_ALPHANUMERIC);
//                    if ((c>= 'a' && c<= 'z') || (c >= 'A' && c <= 'Z'
//                            && c >= '0' && c <= '9')
//                            || (c < 47 && c > 58)
//                            || (c == 45)) //System.out.println(e.getKeyCode());
//                    {
                        if (displayeng.charAt(temp) != e.getKeyChar()) {
                            //System.out.println(e.getKeyCode() + "!=");
//                            try {
//                                display.getHighlighter().addHighlight(temp, temp + 1,
//                                        highlightPainter);
//                            } catch (BadLocationException ex) {
//                                System.out.println(ex);
//                            }
                            e.consume();
                            count = count + 1;
                            // temp = temp + 1;
                            //entered = entered + 1;
                            counterr.setText(Integer.toString(count));
                        } else {
                            try {
                                display.getHighlighter().addHighlight(temp, temp + 1,
                                        highlightPainter);
                            } catch (BadLocationException ex) {
                                System.out.println(ex);
                            }
                            temp = temp + 1;
                            entered = entered + 1;
                        }

                    } else if (c == KeyEvent.VK_BACK_SPACE) {
                        e.consume();
                    }
//else if (e.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
//
//                        System.out.println("Back Space");
//                        if (count > 0) {
//                            count = count - 1;
//                        }
//                        if (temp > 0) {
//                            temp = temp - 1;
//                        }
//                        if (entered >= 0) {
//                            entered = entered - 1;
//                        }
//                        Highlighter hilite = display.getHighlighter();
//                        Highlighter.Highlight[] hilites = hilite.getHighlights();
//                        //  hilite.removeHighlight(hilites[temp - 1]);
//                        hilite.removeHighlight(hilites[temp]);
//
//                        counterr.setText(Integer.toString(count));
//                    }

                } else {
                    temp = 0;
                    j = j + 1;
                    display.setText("");

                    displayeng = engdata[i][j].trim();
                    // displayeng = "";
                    display.setText(displayeng);
                    input.setText("");
                    //input.removeAll();
                }
                m = m++;

            }

            @Override
            public void keyPressed(KeyEvent e) {

            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        }
        );

    }//GEN-LAST:event_englishActionPerformed

    private void counterrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_counterrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_counterrActionPerformed

    private void inputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputMouseClicked
        // time.start();
        //System.out.println("Mouse Clicked");
    }//GEN-LAST:event_inputMouseClicked

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        new UserInputFrame().setVisible(true);
        time.stop();

        dispose();
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        new Welcome().setVisible(true);
        dispose();
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jCheckBoxMenuItem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2MouseClicked
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItem2MouseClicked

    private void jCheckBoxMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem3ActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItem3ActionPerformed

    private void nepaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nepaliActionPerformed
        //  h = h + 1;
        time.restart();
        start = timelen;
        temp = 0;
        j = 0;
        display.setText("");
        input.setText("");
        display.setFont(f);
        input.setFont(f);

        info.setText("Here You Are!!!" + getName());
        //System.out.println("Hello");
        displayed = nepdata[j].trim();
        display.setText(displayed);

        counterr.setFont(f2);
        temp = 0;
        input.addKeyListener(new KeyListener() {

            @Override

            public void keyTyped(KeyEvent e) {
                if (temp < displayed.length() - 1) {
                    // String inputted = input.getText();

                    if ( //e.getKeyCode() != KeyEvent.VK_BACK_SPACE &&
                            e.getKeyCode() != KeyEvent.VK_ALL_CANDIDATES
                            && e.getKeyCode() != KeyEvent.VK_ALT
                            && e.getKeyCode() != KeyEvent.VK_CAPS_LOCK
                            && e.getKeyCode() != KeyEvent.VK_WINDOWS
                            && e.getKeyCode() != KeyEvent.VK_SHIFT
                            && e.getKeyCode() != KeyEvent.VK_CONTROL
                            && e.getKeyCode() != KeyEvent.VK_ENTER) {
                        // if(e.getKeyChar()==KeyEvent.VK_ALPHANUMERIC){

                        if (displayed.charAt(temp) != e.getKeyChar()) {
                            //System.out.println(e.getKeyCode() + "!=");
//                            try {
//                                display.getHighlighter().addHighlight(temp, temp + 1,
//                                        highlightPainter);
//                            } catch (BadLocationException ex) {
//                            }
                            e.consume();
                            count = count + 1;
                            //temp = temp + 1;
                            //entered = entered + 1;
                            counterr.setText(Integer.toString(count));
                        } else {
                            try {
                                display.getHighlighter().addHighlight(temp, temp + 1,
                                        highlightPainter);
                            } catch (BadLocationException ex) {
                            }
                            temp = temp + 1;
                            entered = entered + 1;
                        }
                    } else if (e.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                        e.consume();
                    }
                    //no mistake is typed so no baack space is needed

//                    else if (e.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
//
//                        if (count > 0) {
//                            count = count - 1;
//                        }
//                        if (temp > 0) {
//                            temp = temp - 1;
//                        }
//                        if (entered > 0) {
//                            entered = entered - 1;
//                        }
//                        // try {
////                            display.getHighlighter().addHighlight(temp, temp + 1,
////                                    highlightPainter);
//                        Highlighter hilite = display.getHighlighter();
//                        Highlighter.Highlight[] hilites = hilite.getHighlights();
//                        //hilite.removeHighlight(hilites[temp - 1]);
//                        hilite.removeHighlight(hilites[temp]);
////                        } catch (BadLocationException ex) {
////                        }
//                        counterr.setText(Integer.toString(count));
//                    }
                } else {
                    temp = 0;
                    j = j + 1;
                    display.setText("");

                    displayed = nepdata[j].trim();
                    display.setText(displayed);
                    input.setText("");
                    input.removeAll();
                }
                m = m++;
            }

            @Override
            public void keyPressed(KeyEvent e) {

            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });
//            counterror.setText(Integer.toString(count));

    }//GEN-LAST:event_nepaliActionPerformed

    ActionListener listener = new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            //System.out.println("Action Performed");
            // System.out.println(start);
            start = start - 1000;
            SimpleDateFormat dateFormat = new SimpleDateFormat("mm:ss");
            countdown.setText(dateFormat.format(start));

            if (start <= 0) {
                time.stop();
                display.setText("");
                input.setText("");
                //String coun = countdown.getText();
                int ent = entered;
                String use = user;
                int coun = count;
                Result r = new Result(coun, ent, use, icon, timelen);
                r.setVisible(true);
                dispose();
            }
        }
    };
    Timer time = new Timer(1000, listener);
    /**
     * @param args the command line arguments
     */
        //    public void print(String name) {
    //        info.setText(name);
    //    }
    //    public static void main(String args[]) {
    //        /* Set the Nimbus look and feel */
    //
    //        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    //        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    //         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
    //         */
    //        try {
    //            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    //                if ("Nimbus".equals(info.getName())) {
    //                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
    //                    break;
    //
    //                }
    //            }
    //        } catch (ClassNotFoundException ex) {
    //            java.util.logging.Logger.getLogger(KeyBoardType.class
    //                    .getName()).log(java.util.logging.Level.SEVERE, "", ex);
    //        } catch (InstantiationException ex) {
    //            java.util.logging.Logger.getLogger(KeyBoardType.class
    //                    .getName()).log(java.util.logging.Level.SEVERE, "", ex);
    //        } catch (IllegalAccessException ex) {
    //            java.util.logging.Logger.getLogger(KeyBoardType.class
    //                    .getName()).log(java.util.logging.Level.SEVERE, "", ex);
    //        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    //            java.util.logging.Logger.getLogger(KeyBoardType.class
    //                    .getName()).log(java.util.logging.Level.SEVERE, "", ex);
    //        }
    //        //</editor-fold>
    //
    //        /* Create and display the form */
    //        java.awt.EventQueue.invokeLater(new Runnable() {
    //            public void run() {
    //                new KeyBoardType().setVisible(true);
    //            }
    //        });
    //    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel countdown;
    private javax.swing.JFormattedTextField counterr;
    private javax.swing.JTextArea display;
    private javax.swing.JMenuItem english;
    private javax.swing.JLabel info;
    private javax.swing.JTextArea input;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem nepali;
    // End of variables declaration//GEN-END:variables

}
